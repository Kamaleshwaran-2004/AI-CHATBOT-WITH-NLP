import nltk
import spacy
from nltk.tokenize import word_tokenize
from nltk.corpus import stopwords
import random

nltk.download('punkt')
nltk.download('stopwords')
nlp = spaeting": ["Hello!", "Hi there!", "Hey!", "Hi, how can I help you?"],
    "goodbye": ["Goodbye!", "See you later!", "Bye!", "Take care!"],
    "weather": ["I'm not a meteorologist, but I hope it's sunny!", "It might rain, check your weather app!"],
    "name": ["I'm a chatbot!", "You can call me ChatBot.", "I'm your virtual assistant."],
    "default": ["I'm not sure I understand.", "Can you rephrase that?", "Sorry, I don't have an answer."]
}

def preprocess_text_nltk(text):
    tokens = word_tokenize(text.lower())
    filtered_tokens = [word for word in tokens if word.isalnum() and word not in stopwords.words('english')]
    return filtered_tokens

def get_intent_spacy(text):
    doc = nlp(text.lower())
    for token in doc:
        if token.lemma_ in ["hello", "hi", "hey"]:
            return "greeting"
        elif token.lemma_ in ["bye", "goodbye", "see you"]:
            return "goodbye"
        elif token.lemma_ in ["weather", "rain", "sunny"]:
            return "weather"
        elif token.lemma_ in ["name", "who", "what"]:
            return "name"
    return "default"

def chatbot_response(user_input):
    processed_text = preprocess_text_nltk(user_input)
    intent = get_intent_spacy(" ".join(processed_text))
    return random.choice(responses.get(intent, responses["default"]))

def chat():
    print("ChatBot: Hello! Type 'exit' to end the chat.")
    while True:
        user_input = input("You: ")
        if user_input.lower() in ["exit", "quit"]:
            print("ChatBot: Goodbye!")
            break
        response = chatbot_response(user_input)
        print(f"ChatBot: {response}")

if __name__ == "__main__":
    chat()
cy.load("en_core_web_sm")
esponse = chatbot_response(user_input)
        print(f"ChatBot: {response}")

if __name__ == "__main__":
    chat()
   
